{"version":3,"sources":["serviceWorker.js","components/GradeTags.jsx","components/PercentSelectors.jsx","components/FinalCalc.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","colorDict","A","B","C","D","F","invalid percentage","GradeTags","value","_this$props","this","props","percentage","placement","prettyPercentage","concat","Math","round","react_default","a","createElement","style","display","paddingLeft","tooltip","title","tag","color","Component","RadioButton","Radio","Button","PercentSelectors","aPercentages","key","letter","bPercentages","cPercentages","dPercentages","fPercentages","arr","_this2","onClick","handleClick","_this3","aRadio","map","renderRadio","bRadio","cRadio","dRadio","fRadio","popover","content","inputStyle","Select","Option","width","marginTop","alignSelf","cardStyle","margin","marginBottom","FinalCalc","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleDrawer","setState","drawerVisible","reset","isAuto","alert","es_alert","message","visibility","gradeWanted","mpCount","finalWeight","inputs","i","push","weight","toggleAuto","_this$state","calculateFinal","toggleFullYear","length","updateMPCount","updateFinalWeight","_this$state2","_this$state3","newInputs","thisInput","_unused","updateGradeWanted","updateMP","v","_this$state4","finalGrade","total","filter","startsWith","reduce","b","type","showIcon","inputss","gpa","weightDict","AP","dualenrollment","honors","regular","percentToGPA","100","98","94","92","90","86","84","82","76","74","72","66","64","initInputs","_this$state5","_this$state6","output","Fragment","flexDirection","shouldDisplay","input_number","formatter","string","max","min","disabled","k","parser","replace","onChange","paddingTop","height","paddingRight","components_GradeTags","components_PercentSelectors","float","borderTop","textAlign","justifyContent","es_button","card","extra","drawer","closable","onClose","visible","marginLeft","trunc","mountNode","document","getElementById","ReactDOM","render","components_FinalCalc","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.428f9c1e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Tag, Tooltip } from 'antd';\r\n\r\nconst colorDict = {\r\n  \"A\": \"green\",\r\n  \"B\": \"lime\",\r\n  \"C\": \"gold\",\r\n  \"D\": \"volcano\",\r\n  \"F\": \"red\",\r\n  \"invalid percentage\": \"geekblue\",\r\n}\r\n\r\nclass GradeTags extends Component {\r\n  state = {};\r\n  render() {\r\n    let A = 93 - 1;\r\n    let B = 85 - 1;\r\n    let C = 76 - 1;\r\n    let D = 66 - 1;\r\n    let F = 0;\r\n\r\n    let value;\r\n\r\n    let { percentage, placement } = this.props;\r\n    let prettyPercentage = `${Math.round(percentage)}%`;\r\n\r\n    if (percentage > A){\r\n      value = \"A\";\r\n    } else if (percentage > B){\r\n      value = \"B\";\r\n    } else if (percentage > C){\r\n      value = \"C\";\r\n    } else if (percentage > D){\r\n      value = \"D\";\r\n    } else if (percentage >= F){\r\n      value = \"F\";\r\n    } else {\r\n      value = \"invalid percentage\";\r\n    }\r\n\r\n    return (\r\n      <div style={{display: 'inline-block', paddingLeft: '5%'}}>\r\n        <Tooltip title={ value } placement={ placement || \"top\" }>\r\n          <Tag color={ colorDict[value] }>{ prettyPercentage }</Tag>\r\n        </Tooltip>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default GradeTags;\r\n","import React, { Component } from 'react';\r\nimport { Tag, Popover, Radio } from 'antd';\r\n\r\nconst RadioButton = Radio.Button;\r\n\r\nclass PercentSelectors extends Component {\r\n  state = {\r\n    aPercentages: [{key: 99, letter: \"A+\"}, {key: 95, letter: \"A\"}, {key: 93, letter: \"A-\"}],\r\n    bPercentages: [{key: 91, letter: \"B+\"}, {key: 87, letter: \"B\"}, {key: 85, letter: \"B-\"}],\r\n    cPercentages: [{key: 83, letter: \"C+\"}, {key: 77, letter: \"C\"}, {key: 75, letter: \"C-\"}],\r\n    dPercentages: [{key: 73, letter: \"D+\"}, {key: 67, letter: \"D\"}, {key: 65, letter: \"D-\"}],\r\n    fPercentages: [{key: 64, letter: \"F\"}],\r\n  };\r\n\r\n  renderRadio(arr) {\r\n    return (\r\n      <RadioButton\r\n        value={arr.key}\r\n        onClick={() => this.props.handleClick(arr.key)}\r\n        key={arr.key} >{arr.key}%</RadioButton>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let aRadio = this.state.aPercentages.map(arr => this.renderRadio(arr))\r\n    let bRadio = this.state.bPercentages.map(arr => this.renderRadio(arr))\r\n    let cRadio = this.state.cPercentages.map(arr => this.renderRadio(arr))\r\n    let dRadio = this.state.dPercentages.map(arr => this.renderRadio(arr))\r\n    let fRadio = this.state.fPercentages.map(arr => this.renderRadio(arr))\r\n    return (\r\n      <div style={ this.props.style }>\r\n        <Popover placement=\"bottom\" content={aRadio}>\r\n          <Tag color='green'>A</Tag>\r\n        </Popover>\r\n        <Popover placement=\"bottom\" content={bRadio}>\r\n          <Tag color='lime'>B</Tag>\r\n        </Popover>\r\n        <Popover placement=\"bottom\" content={cRadio}>\r\n          <Tag color='gold'>C</Tag>\r\n        </Popover>\r\n        <Popover placement=\"bottom\" content={dRadio}>\r\n          <Tag color='volcano'>D</Tag>\r\n        </Popover>\r\n        <Popover placement=\"bottom\" content={fRadio}>\r\n          <Tag color='red'>F</Tag>\r\n        </Popover>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default PercentSelectors;\r\n","import React, { Component } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Alert, Drawer, InputNumber, Card, Select, Button } from 'antd';\r\nimport GradeTags from './GradeTags'\r\nimport PercentSelectors from './PercentSelectors'\r\n\r\nconst Option = Select.Option;\r\n\r\nconst inputStyle = {\r\n  width: `${100/3}%`,\r\n  display: \"inline-block\",\r\n  marginTop: \"3%\",\r\n  alignSelf: \"center\",\r\n}\r\n\r\nconst cardStyle = {\r\n    width: '350px',\r\n    margin: \"auto\",\r\n    marginTop: \"10vh\",\r\n    marginBottom: \"10vh\",\r\n}\r\n\r\nclass FinalCalc extends Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    let finalWeight = .1\r\n\r\n    this.state = {\r\n      gpa: 0,\r\n      isAuto: true, // as opposed to manual\r\n\r\n      drawerVisible: false,\r\n\r\n      alert: <Alert message=\"x\" style={{visibility: \"hidden\"}}/>,\r\n\r\n      gradeWanted: 95,\r\n\r\n      finalWeight: finalWeight,\r\n      mpCount: 4,\r\n\r\n      inputs: [],\r\n\r\n      weightDict: {\r\n        'AP': .5,\r\n        'dualenrollment': .25,\r\n        'honors': .25,\r\n        'regular': 0,\r\n      },\r\n\r\n      percentToGPA: {\r\n        // use the maximum per range\r\n        100: 4,   // A+ 99-100\r\n        98: 4,    // A  95-98\r\n        94: 3.67, // A- 93-94\r\n        92: 3.33, // B+ 91-92\r\n        90: 3,    // B  87-90\r\n        86: 2.67, // B- 85-85\r\n        // does not recieve honors weight past this point\r\n        84: 2.33, // C+ 83-84\r\n        82: 2,    // C  77-82\r\n        76: 1.67, // C- 75-76\r\n        74: 1.33, // D+ 73-74\r\n        72: 1,    // D  67-72\r\n        66: .67,  // D- 65-66\r\n        64: 0,    // F  0-64\r\n      }\r\n    };\r\n    this.initInputs();\r\n  }\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({ drawerVisible: !this.state.drawerVisible });\r\n  };\r\n\r\n  initInputs() {\r\n    let { finalWeight, mpCount } = this.state;\r\n    let inputs = [];\r\n    for(let i=0; i < mpCount; i++){\r\n      inputs.push({\r\n          'title': `MP ${i+1}`,\r\n          'value': 0,\r\n          'weight': (1-finalWeight)/mpCount,\r\n      })\r\n    }\r\n\r\n    inputs.push({\r\n      'title': 'Final',\r\n      'value': 0,\r\n      'weight': finalWeight,\r\n    })\r\n    this.state.inputs = inputs;\r\n  }\r\n\r\n  reset = () => {\r\n    let finalWeight = .1;\r\n    let mpCount = 4;\r\n\r\n    this.setState({\r\n      isAuto: true,\r\n      alert: <Alert message=\"x\" style={{visibility: \"hidden\"}}/>,\r\n      gradeWanted: 95,\r\n      mpCount,\r\n      finalWeight\r\n    })\r\n\r\n\r\n    let inputs = [];\r\n    for(let i=0; i < mpCount; i++){\r\n      inputs.push({\r\n          'title': `MP ${i+1}`,\r\n          'value': 0,\r\n          'weight': (1-finalWeight)/mpCount,\r\n      })\r\n    }\r\n\r\n    inputs.push({\r\n      'title': 'Final',\r\n      'value': 0,\r\n      'weight': finalWeight,\r\n    })\r\n\r\n    this.setState({ inputs })\r\n  }\r\n\r\n  toggleAuto = () => {\r\n    let { isAuto, gradeWanted } = this.state;\r\n    this.setState({ isAuto: !isAuto });\r\n    if (!isAuto) {\r\n      this.calculateFinal(gradeWanted);\r\n    }\r\n  }\r\n\r\n  toggleFullYear = () => {\r\n    let { inputs } = this.state;\r\n    if (inputs.length > 3) {\r\n      this.updateMPCount(2);\r\n    } else {\r\n      this.updateMPCount(4);\r\n    }\r\n  }\r\n\r\n  updateFinalWeight = (finalWeight) => {\r\n    let { inputs, mpCount } = this.state;\r\n    finalWeight /= 100;\r\n    inputs.map(i => {\r\n      if (i.title === \"Final\") {\r\n        i.weight = finalWeight;\r\n      } else {\r\n        i.weight = (1-finalWeight)/mpCount;\r\n      }\r\n      return i;\r\n    })\r\n    this.setState({ finalWeight, inputs })\r\n  }\r\n\r\n  updateMPCount = (mpCount) => {\r\n    let { finalWeight, inputs } = this.state;\r\n    let newInputs = [];\r\n    let value;\r\n    for(let i=0; i < mpCount; i++){\r\n      let thisInput = inputs[i];\r\n      try {\r\n        value = thisInput.title === \"Final\" ? 0 : thisInput.value || 0;\r\n      } catch {\r\n        value = 0;\r\n      }\r\n      newInputs.push({\r\n          'title': `MP ${i+1}`,\r\n          'value': value,\r\n          'weight': (1-finalWeight)/mpCount,\r\n      })\r\n    }\r\n\r\n    newInputs.push({\r\n      'title': 'Final',\r\n      'value': 0,\r\n      'weight': finalWeight,\r\n    })\r\n\r\n    // inputs.map(i => {\r\n    //   if (i.title !== \"Final\") {\r\n    //     i.weight = (1-finalWeight)/mpCount;\r\n    //   }\r\n    //   return i;\r\n    // })\r\n\r\n    this.setState({ inputs: newInputs, mpCount })\r\n  }\r\n\r\n  updateGradeWanted = gradeWanted => {\r\n    this.setState({ gradeWanted });\r\n    this.calculateFinal(gradeWanted);\r\n  }\r\n\r\n  updateMP = (v, title) => {\r\n    v = v || 0; // v ||= 0;\r\n    let inputs = this.state.inputs.map(i => {\r\n      if (i.title === title){\r\n        i.value = v;\r\n      }\r\n      return i;\r\n    })\r\n    this.setState({ inputs });\r\n    if (this.state.isAuto) {\r\n      this.calculateFinal(this.state.gradeWanted);\r\n    }\r\n  }\r\n\r\n  calculateFinal = (gradeWanted) => {\r\n    let { inputs, isAuto, finalWeight } = this.state;\r\n    if (isAuto) {\r\n      let finalGrade;\r\n      let total = inputs.filter(i => !i.title.startsWith(\"Final\")&&i.weight).map(i => i.value*i.weight).reduce((a, b) => a+b);\r\n\r\n      // console.log(\"Total: \", total);\r\n      // console.log(\"Grade Wanted: \", gradeWanted-.5);\r\n\t\t\tfor (let i=0; i*finalWeight+total<=gradeWanted-.5; i++) {\r\n        if (i > 101){\r\n          break;\r\n        }\r\n  \t\t\tfinalGrade = i;\r\n  \t\t}\r\n      // console.log(\"Final grade: \", finalGrade);\r\n\r\n      if (finalGrade > 100) {\r\n        this.setState({ alert: <Alert message=\"Desired grade is unachievable.\" type=\"error\" showIcon/> })\r\n        finalGrade = 100;\r\n      } else if (finalGrade <= 0 || !finalGrade) {\r\n        finalGrade = 0;\r\n        this.setState({ alert: <Alert message=\"You don't even need to take a final!\" type=\"success\" showIcon/> })\r\n      } else {\r\n        this.setState({ alert: <Alert message=\"x\" type=\"info\" style={{visibility: \"hidden\"}}/> })\r\n      }\r\n\r\n      let inputss = inputs.map(i => {\r\n        if (i.title === \"Final\"){\r\n          i.value = finalGrade;\r\n        }\r\n        return i;\r\n      })\r\n      this.setState({ inputs:inputss })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { alert, inputs, isAuto, gradeWanted, finalWeight } = this.state;\r\n\r\n    console.log(inputs)\r\n\r\n    let percentage = Math.round(inputs.map(i => i.value*i.weight).reduce((a, b) => a+b))\r\n\r\n    if (!isAuto) {\r\n      alert = <Alert message=\"x\" type=\"info\" style={{visibility: \"hidden\"}}/>\r\n    }\r\n\r\n    let output = (\r\n      <React.Fragment>\r\n        <h2>Calculate your final grade</h2>\r\n        { alert }\r\n        <div style={{ display: \"flex\", flexDirection: \"column\"}}>\r\n          { inputs.map(i => {\r\n            let shouldDisplay = \"visible\"\r\n            if (i.title === \"Final\" && !this.state.finalWeight){\r\n              shouldDisplay = \"hidden\"\r\n            }\r\n\r\n            return (\r\n              <div key={ i.title } style={{  alignSelf: \"center\", visibility: shouldDisplay }}>\r\n                <div style={{ width: `${100/3}%`, display:\"inline-block\" }}>\r\n                  {i.title}\r\n                </div>\r\n                <InputNumber\r\n                  formatter={ string => string === \"0\" ? '' : string }\r\n                  style={ inputStyle }\r\n                  key={ i.title }\r\n                  title={ i.title }\r\n                  max={ 100 }\r\n                  min={ 0 }\r\n                  disabled={ i.title.startsWith(\"Final\")&&isAuto }\r\n                  value={ inputs.filter(k => k.title === i.title)[0].value }\r\n                  parser={string => string.replace(/[^\\d\\.]+/g, '')}\r\n                  onChange={v => this.updateMP(v, i.title) }\r\n                />\r\n              </div>\r\n            )\r\n          }) }\r\n        </div>\r\n        <div style={{ paddingTop: \"3%\", height: \"40px\", visibility: isAuto ? \"visible\" : \"hidden\" }}>\r\n            <span style={{ paddingRight: \"0%\" }}>I want</span>\r\n            <GradeTags percentage={ gradeWanted } placement={ \"right\" } />\r\n            <PercentSelectors style={{ display: \"inline-block\", float: \"right\" }} handleClick={ this.updateGradeWanted } />\r\n        </div>\r\n        <div style={{ width: '100%', borderTop: \"1px solid gray\", textAlign: \"center\" }}>\r\n          <h1>{ percentage }%</h1>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <Button onClick={ this.toggleAuto }>{ isAuto ? \"Manual\" : \"Auto\" }</Button>\r\n          <Button type=\"primary\" onClick={ this.reset }>Reset</Button>\r\n          <Button onClick={ this.toggleFullYear }>{ inputs.length > 3 ? \"Semester\" : \"Full Year\" }</Button>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <Card\r\n          title={ \"MP Calc\" }\r\n        extra={\r\n          <Button onClick={ this.toggleDrawer } >Advanced</Button>\r\n        }\r\n          style={ cardStyle }\r\n        >\r\n        { output }\r\n\r\n        </Card>\r\n        <Drawer\r\n          title=\"Final Grade Calculator\"\r\n          placement=\"right\"\r\n          closable={false}\r\n          onClose={this.toggleDrawer}\r\n          visible={this.state.drawerVisible}\r\n        >\r\n          <p>A calculator to see what you need to get on your final to finish with the grade you want.</p>\r\n          <Button onClick={ () => this.updateFinalWeight(finalWeight ? 0 : 10) }>{ finalWeight ? \"No Final\" : \"Final\" }</Button>\r\n            <div>\r\n              <span>\r\n                Final Weight:\r\n              </span>\r\n              <InputNumber\r\n                style={{ width: `${100/3}%`, display: \"inline-block\", marginTop: \"3%\", marginLeft: \"3%\" }}\r\n                max={ 100 }\r\n                min={ 0 }\r\n                value={ Math.trunc(this.state.finalWeight*100) }\r\n                parser={string => string.replace(/[^\\d\\.]+/g, '')}\r\n                onChange={v => this.updateFinalWeight(v) }\r\n                />\r\n            </div>\r\n            <div>\r\n              <span>\r\n                MP Count:\r\n              </span>\r\n              <InputNumber\r\n                style={{ width: `${100/3}%`, display: \"inline-block\", marginTop: \"3%\", marginLeft: \"3%\" }}\r\n                max={ 10 }\r\n                min={ 1 }\r\n                value={ this.state.mpCount }\r\n                parser={string => string.replace(/[^\\d\\.]+/g, '')}\r\n                onChange={v => this.updateMPCount(v) }\r\n                />\r\n            </div>\r\n        </Drawer>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default FinalCalc;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport FinalCalc from './components/FinalCalc'\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nconst mountNode = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <FinalCalc />,\r\n  mountNode\r\n);\r\n// ReactDOM.render(<GradeInput />, document.getElementById('root'));\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}